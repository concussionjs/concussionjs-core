var mongoose = require('mongoose');
url = require("url")
path = require("path")
http = require("http")
fs = require("fs")
var db = mongoose.connect('mongodb://localhost/test');
Schema = mongoose.Schema;

var appSchema = new Schema();
var appName;
var appLocation;
appSchema.add({
port: Number,
name: String,
location:String});

var apps = mongoose.model("apps",appSchema);


var listen = function (server,id) {
	console.log("the id:" + id);
	var instance = new apps();
	var port;
	apps.findById(id,function(err,doc){	
		server.listen(doc.port);
		appName = doc.name;
		appLocation = doc.location;
		console.log("after server.address().port: " + server.address().port);
	});
}


module.exports.createServer = function(settings,createserver)
{
	module.exports.server = http.createServer(function(req,res){
		createserver(req,res);
	});
	listen(module.export.server,settings.id);
	console.log(module.exports.server);
}

module.exports.createServerWithStaticFiles = function(settings,createserver)
{
        module.exports.server = http.createServer(function(req,res){
                serveStaticFiles(req,res,createserver);
        });
        listen(module.exports.server,settings.id);
	
}



serveStaticFiles = function(req,res,next){
                var uri = url.parse(req.url).pathname;
               	var dirname = appLocation;//process.cwd();
		console.log("appname: ",appName);
		console.log("dirname: " + dirname);
		var filename = path.join(dirname,uri);	
		
		//var filePath = '.' + request.url;
    		//if (filePath == './')
        	//filePath = './index.htm';
		
		console.log("uri: " + uri);
		console.log("filename: " + filename);
                path.exists(filename, function(exists) {
                	if(!exists) 
			{
                        	/*res.writeHead(404, {"Content-Type": "text/plain"});
                        	res.write("404 Not Found\n");
                        	res.end();
				return;*/
				//console.log("just before next");
                        	next(req,res);
				return;
                	}

                	if (fs.statSync(filename).isDirectory())
			{
				filename += '/index.html';
				//next(req,res);
				//return;
			}

                	fs.readFile(filename,'binary', function(err, file) 
			{

                		if(err) 
				{
                        		res.writeHead(500, {"Content-Type": "text/plain"});
	                        	res.write(err + "\n");
        	                	res.end();
                	        	return;
                		}

		                res.writeHead(200);
                		res.write(file, 'binary');
		                res.end();
			});
			return true;
		});
}

