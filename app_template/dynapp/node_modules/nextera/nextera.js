var mongoose = require('mongoose');
url = require("url")
path = require("path")
http = require("http")
fs = require("fs")
var html = fs.readFileSync("kotemplate.ejs","utf-8");
var ejs = require("ejs");
var parse = require('../../testParse.js');
var koScript = "";
module.exports.koScript=koScript;

var db = mongoose.connect('mongodb://localhost/test');
Schema = mongoose.Schema;
var appLocation;
var appSchema = new Schema();

appSchema.add({
port: Number,
location: String});

var apps = mongoose.model("apps",appSchema);

module.exports.listen = function (server,id) {
	console.log("the id:" + id);
	var instance = new apps();
	var port;
	apps.findById(id,function(err,doc){	
		server.listen(doc.port);
		appLocation=doc.location;
		console.log("after server.address().port: " + server.address().port);
	});
}


module.exports.createServer = function(settings,createserver)
{
	var server = http.createServer(function(req,res){
		createserver(req,res);
	});
	listen(server,settings.id);
}

module.exports.createServerWithStaticFiles = function(settings,createserver)
{
        var server = http.createServer(function(req,res){
                serveStaticFiles(req,res,createserver);
        });
        listen(server,settings.id);
}


module.exports.serveStaticFilesNoWriteHead = function(req,res,next){
              
		var uri = url.parse(req.url).pathname.split("?")[0];
              	
		var dirname = appLocation;//path.dirname(process.cwd());
		console.log(dirname," ",uri);
		var filename = path.join(dirname,uri);		
		       
		path.exists(filename, function(exists) {               	
			if(!exists) 
			{
                        	//res.writeHead(404, {"Content-Type": "text/plain"});
                        	//res.write("404 Not Found\n");
                        	//res.end();
				console.log(filename + " does not exist");
				next();
				return;                       	
                	}

                	if (fs.statSync(filename).isDirectory())
			{
				filename += "/index.html";
			}

                	fs.readFile(filename, "binary", function(err, file) 
			{

                		if(err) 
				{
	                        	res.write(err + "\n");
        	                	res.end();
					next();
                	        	return;
              			}
				console.log("about to write head, filename: ",filename, " ", filename.search("index.html") );
				res.writeHead(200);
				if(filename.search("index.html")>-1)
				{
					parse.runGenerateStructure("index.html",function(objects){
						console.log(JSON.stringify(objects));
						//JSON.parse(objects)
						console.log(ejs.render(html,{locals:{myObjects:objects}}));
						res.write(ejs.render(html,{locals:{myObjects:objects}}));
						res.write(koScript);
                				res.write(file, "binary");
		              		res.end();	
					});
				}
				else
				{
					res.write(file, "binary");
		              	res.end();
				}
			});
			return true;
		});
}

