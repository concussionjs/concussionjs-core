$('head').append("<script type='text/javascript'>var $mvm;</script>");
$('head').append("<link rel='stylesheet' href='http://<%=URLPrefix%>/css/spinner.css'>");
//$(function(){
<%
try{
	
	objects = myObjects;
	testdriveURL = URLPrefix; 
	var tenantId = tenantId;
	if(CJSsettings)
	{
		var objectNames = CJSsettings.objectName.split(",");
		var securityKey = CJSsettings.securityKey;
		var securityType = CJSsettings.securityType;
		var searchTargets = CJSsettings.searchTargets.split(",");
	}
	else
	{
		var objectNames = [];
		var securityKey = "";
		var securityType = "";
	}
	%>
	function fields(data)
			{
				//alert(data.type);
				
				var self = this;
				self.name=ko.observable(data.name);					
				self.type=ko.observable(data.type);			
				self._id=ko.observable(data._id);
					
			}
	// handle children
	<%
	function handleChildren(myObject,counter,nextFunction)
	{
		
		if(!myObject)
			return;

		myObject.varname=myObject.name.split("_")[2];
		if(myObject.name.search("_search")>-1)
		{
			console.log("inside handleChildren where myObject.name contains _search");
                        nextFunction(objects[counter+1],counter+1,handleChildren);
			return;
		}

		//console.log("at top of handle: ",myObject.name);
		if(myObject.children && myObject.children.length>0)
		{
			//console.log("I should not be here");
			for(i=0;i<myObject.children.length;i++)
			{
				//console.log("inside children loop");
				handleChildren(myObject.children[i]);
			}
		}
		%>


			var <%=myObject.name%> = function(data)
			{
				//alert(JSON.stringify(data));

				var self = this;

				<%
				//console.log("inside creating function");
				if(myObject.fields)
				{
					//console.log("inside fields");
					for(j=0;j<myObject.fields.length;j++)
					{
						//console.log("inside adding fields loop");
						if(myObject.fields[j].name!="_id")
						{
					%>
						if(data.<%=myObject.fields[j].name%>)
						{
							self.<%=myObject.fields[j].name%>=ko.observable(data.<%=myObject.fields[j].name%>);
						}
						else
						{
							self.<%=myObject.fields[j].name%>=ko.observable('');
						}
					<%
						}	
						//console.log("after processing adding field");
					}
					%>
						this.remove = function() {
    					   //alert(ko.toJSON(self) + " \n\n" + ko.toJSON(this) + " bday:" + this.birthday());
    					   	$.ajax("http://<%=testdriveURL%>/delete/instances/"+this.id(), {
    					   		data: '',
								type: "get", 
								dataType: "text",
								success: function(result)
								{
									/*$.getJSON("http://<%=testdriveURL%>/getEntriesByTenantObjectId/<%=myObject.name%>", function(allData) {
										var mapped = $.map(allData, function(item) { return new <%=myObject.name%>(item) });
										$mvm.<%=myObject.varname%>.read(mapped);
									});*/
    					   			$mvm.<%=myObject.name%>_getRecords();
								}
							});
						}

						this.update = function() {
							<%
								if(securityKey)
							{%>
								self.<%=securityKey%>=cjs.readCookie("<%=securityKey%>");
							<%}%>
       						$.ajax("http://<%=testdriveURL%>/update/instances/<%=myObject.name%>/" + this.id() , {
							data: ko.toJSON(self),
							type: "post", dataType: "text",
							success: function(result) 
							{ 
								/*$.getJSON("http://<%=testdriveURL%>/getEntriesByTenantObjectId/<%=myObject.name%>", function(allData) {
									var mapped = $.map(allData, function(item) { return new <%=myObject.name%>(item) });
									$mvm.<%=myObject.varname%>.read(mapped);
								});*/
								$mvm.<%=myObject.name%>_getRecords();
        				   	}
       						});
    					}	
						
						self.id=ko.observable(data._id);
						self.row=ko.observable("");
						self.myForm = ko.observable("");
					<%
				}
				if(myObject.children)
				{
					//console.log("I have children");
					
					for(var i=0;i<myObject.children.length;i++)
					{
						//console.log("inside children loop");
						if(myObject.children[i].fields && myObject.children[i].fields.length>0)
						{
						%>
						if(data.<%=myObject.children[i].name%>)
							self.<%=myObject.children[i].name%> = $.map(data.<%=myObject.children[i].name%>,function(item){return new <%=myObject.children[i].name%>(item)});
						<%
						}
				
					}
					
					//console.log("after loop");
				}

		%>
			}
			
		<%
			//console.log("before calling next function ");
		
			if(objects && counter<objects.length)
			{
				//console.log("inside calling next function ", objects.length, " ",counter);
				nextFunction(objects[counter+1],counter+1,handleChildren);
			}
		
		
	}
	
	var i=0;
	
	handleChildren(objects[0],0,handleChildren);

	%>
	<% if(tenantId && tenantId!=""){%>
		cjs.createCookie("tenantId", "<%=tenantId%>");
	<%}%>
	function myViewModel()
	{
		var self = this;
	<%
	//console.log("myViewModel: ", objects.length);
	for(var i=0;i<objects.length;i++)
	{
		objects[i].varname=objects[i].name.split("_")[2];
		//console.log("tee: ", objects[i], " ", objects[i].type, " ", objects[i].fields.length);
		if(objects[i].varname.search("_search")>-1)
			continue;
		if(objects[i].name)
		{
		%>
		//self.<%=objects[i].varname%>=ko.observableArray([]);
		self.<%=objects[i].varname%>_search_results=ko.observableArray([]);
		//self.<%=objects[i].varname%>(self.<%=objects[i].name%>_search_results);
		self.<%=objects[i].varname%>_search_term=ko.observable();							

		<%
		}
	}
	%>
	//setFormData
	<%
	for(var i=0;i<objects.length;i++)
	{
		if(objects[i].name)
		{
	%>	
	<%=objects[i].varname%>_reset_form = function(me)
		{
			//alert(me.first_name());
	<%
		for(j=0;j<objects[i].fields.length;j++)
		{
			if(objects[i].fields[j].name!="_id")
			{
	%>
			self.<%=objects[i].varname%>.<%=objects[i].fields[j].name%>("");
	<%
			}
		}
	%>
		}

	<%
		}
	}
	%>
	//initial load
	<%
	for(var i=0;i<objects.length;i++)
	{
		 if(objects[i].name.search("_search")>-1)
                        continue;	
	%>
	self.<%=objects[i].name%>_getRecords= function(userId, callback)
	{
		<%
		if(securityKey)
		{%>
		if(!userId)
		{
			//?<%=securityKey%>="+cjs.readCookie("<%=securityKey%>"),
			$.ajax(
				{url:"http://<%=testdriveURL%>/getEntriesByTenantObjectId/<%=objects[i].name%>?<%=securityKey%>="+cjs.readCookie("<%=securityKey%>"),
				dataType:"json",
				data:'',
				success:function(data){
					var mapped = $.map(data, function(item) { return new <%=objects[i].name%>(item) });
        			self.<%=objects[i].varname%>.read(mapped);
        			if(callback)
        			{
        				callback();
        			}
				}			
			});
		}
		else{
			$.ajax(
				{url:"http://<%=testdriveURL%>/getEntriesByTenantObjectId/<%=objects[i].name%>?<%=securityKey%>="+userId,
				dataType:"json",
				data:'',
				success:function(data){
					var mapped = $.map(data, function(item) { return new <%=objects[i].name%>(item) });
        			self.<%=objects[i].varname%>.read(mapped);
        			if(callback)
        			{
        				callback();
        			}
				}			
			});
		}

		<%}
		else
		{%>
		$.ajax(
			{url:"http://<%=testdriveURL%>/getEntriesByTenantObjectId/<%=objects[i].name%>",
			dataType:"json",
			data:'',
			success:function(data){
				var mapped = $.map(data, function(item) { return new <%=objects[i].name%>(item) });
        			self.<%=objects[i].varname%>.read(mapped);
			}			
		});
		<%}%>
	}
	<%
	}
	%>

	// create code
	<%
	for(var i=0;i<objects.length;i++)
	{
		 if(objects[i].name.search("_search")>-1)
                        continue;	
	%>
	//if(!self.<%=objects[i].varname%>)
		self.<%=objects[i].varname%> = {};
	self.<%=objects[i].varname%>Form = ko.observable();

    var <%=objects[i].varname%>CreateJSON = function(){
    	//console.log("in CreateJSON");
	$mvm.<%=objects[i].varname%>Form({
		<%
		if(securityKey){
		%>
			<%=securityKey%>:cjs.readCookie("<%=securityKey%>"),
		<%}%>
	<%		
	for(var j=0;j<objects[i].fields.length-1;j++)
	{
		if(objects[i].fields && objects[i].fields.length > j && objects[i].fields[j].name!="_id")
		{
		%>
			<%=objects[i].fields[j].name%>:self.<%=objects[i].varname%>.<%=objects[i].fields[j].name%>(),
		<%
		}
	}
	%><%=objects[i].fields[objects[i].fields.length-1].name%>:self.<%=objects[i].varname%>.<%=objects[i].fields[objects[i].fields.length-1].name%>()
    	});


	}
    
    self.<%=objects[i].varname%>.read=ko.observableArray([]);

    <%
    for(var j=0;j<objects[i].fields.length;j++)
	{
		if(objects[i].fields[j].name!="_id")
		{
		%>self.<%=objects[i].varname%>.<%=objects[i].fields[j].name%>=ko.observable("");
		<%
		}
	}
	%>
    self.<%=objects[i].varname%>.create = function() {
    	var patt = new RegExp("<%=objects[i].varname%>Form","g");
        //alert(ko.toJSON(self)); 
        //console.log("self b " + $mvm.<%=objects[i].varname%>Form());
       
        //alert(ko.toJSON(self)); 
        //console.log("self ja " + ko.toJSON($mvm.<%=objects[i].varname%>Form()));
        //console.log("self a" + ko.toJSON($mvm.<%=objects[i].varname%>.read()));
        var data = new FormData();
        if($("input:file") && $("input:file").length>0)
        {
        	$.each($("input:file")[0].files, function(i, file) {
    			data.append('file-'+i, file);
			});
        }

        var id = cjs.readCookie("userId");
        
        if(!id)
        {
        	id = cjs.readCookie("sessionId");
        }
        
        if($("input:file") && $("input:file").length>0)
        {	
        	<% if(tenantId && tenantId!=""){%>
        		var tenantId = "<%=tenantId%>";
        	<%}else{%>
        		var tenantId = "anonymous";
        	<%}%>

        	if(tenantId!='anonymous')
        	{
        		var currentFileName = "https://s3.amazonaws.com/" + "<%=testdriveURL%>".replace("api","<%=tenantId%>").replace("local-","") + "/cjs-uploads/" + id + "/" + $('#file')[0].files["0"].name
			}
			else
			{
				var currentFileName = "https://s3.amazonaws.com/cjs-uploads/" + id + "/" + $('#file')[0].files["0"].name	
			}

			var currentIndex;
			$mvm.<%=objects[i].varname%>.location = ko.observable(currentFileName);
			console.log($mvm.<%=objects[i].varname%>.location());

			<%=objects[i].varname%>CreateJSON();
    				$.ajax("http://<%=testdriveURL%>/createInstance/<%=objects[i].name%>", {
						data: "{\"<%=objects[i].name%>\":" + ko.toJSON($mvm.<%=objects[i].varname%>Form()) + "}",
						type: "post",
						dataType: "text",
						success: function(result) 
						{
        					console.log(result);
        					currentIndex=$mvm.<%=objects[i].varname%>.read().length;
        					self.<%=objects[i].name%>_getRecords(null, function(){
								$mvm.<%=objects[i].varname%>.read()[currentIndex].location("http://<%=testdriveURL%>/images/loading.gif");
								var spinner = createSpinner();
								spinner.setAttribute('id','spinner' + $mvm.<%=objects[i].varname%>.read()[currentIndex].id());
								$("#" + $mvm.<%=objects[i].varname%>.read()[currentIndex].id()).parent().append(spinner);
								$("#" + $mvm.<%=objects[i].varname%>.read()[currentIndex].id()).hide();
								console.log($mvm.<%=objects[i].varname%>.read()[currentIndex].id() + " " + $("#" + $mvm.<%=objects[i].varname%>.read()[currentIndex].id()).length);
							});
							<%=objects[i].varname%>_reset_form();
							console.log("** currentIndex ** : " + currentIndex);
							
							$.ajax({
    							url: 'http://<%=testdriveURL%>/upload/' + tenantId + '/' + id,
    							async:true,
    							data: data,
    							cache: false,
    							contentType: false,
    							processData: false,
    							type: 'POST',
    							success: function(result){
        							console.log(result);
        							$mvm.<%=objects[i].varname%>.read()[currentIndex].location(currentFileName);
        							$("#" + $mvm.<%=objects[i].varname%>.read()[currentIndex].id()).show();
        							$("#spinner" + $mvm.<%=objects[i].varname%>.read()[currentIndex].id()).hide();
    							}
							});
						}
        			});	
		}
		else
		{
			<%=objects[i].varname%>CreateJSON();
			$.ajax("http://<%=testdriveURL%>/createInstance/<%=objects[i].name%>", {
					async:false,
					data: "{\"<%=objects[i].name%>\":" + ko.toJSON($mvm.<%=objects[i].varname%>Form()) + "}",
					type: "post",
					dataType: "text",
					success: function(result) 
					{
        				self.<%=objects[i].name%>_getRecords();
						<%=objects[i].varname%>_reset_form();
					}
        	});
		}
        

       
    }
    	 
    
	self.<%=objects[i].varname%>.search = function(searchTerm) {
		//alert(self.<%=objects[i].name%>_search_term());
		if(searchTerm=="")
		{
			if(cjs.readCookie("userId"))
			{
				self.<%=objects[i].name%>_getRecords(cjs.readCookie("userId"));
			}
			else
			{
				self.<%=objects[i].name%>_getRecords();
			}
		}
		else
		{
			if(cjs.readCookie("userId")!="")
			{
				$.getJSON("http://<%=testdriveURL%>/search/id_" + cjs.readCookie("tenantId") + "_" + "<%=objects[i].varname%>" + "/" + cjs.readCookie("userId") +"/" + searchTerm, function(allData) {
            		var mapped = $.map(allData, function(item) { return new <%=objects[i].name%>(item.obj) });
            		//self.<%=objects[i].varname%>_search_results(mapped);
					self.<%=objects[i].varname%>.read(mapped);
        		});
			}
			else{
				$.getJSON("http://<%=testdriveURL%>/search/id_" + cjs.readCookie("tenantId") + "_" + "<%=objects[i].varname%>" + "/" + searchTerm, function(allData) {
            		var mapped = $.map(allData, function(item) { return new <%=objects[i].name%>(item.obj) });
            		//self.<%=objects[i].varname%>_search_results(mapped);
					self.<%=objects[i].varname%>.read(mapped);
        		});
			}
		}
    }
	<%
	}
	%>
	}

	<% 	if(searchTargets)
		{
			for(var i=0;i<searchTargets.length;i++)
			{
	%>
			$("#search").change(function(){
           	 	console.log("searching for " + $("#search").val());
            	$mvm.<%=searchTargets[i]%>.search($("#search").val());
        	});
	<%
			}
		}
	%>

	$mvm = new myViewModel();
	ko.applyBindings($mvm);
<%
	for(var i=0;i<objects.length;i++)
	{
	%>
		$mvm.<%=objects[i].name%>_getRecords();
		console.log("self " + ko.toJSON($mvm));
	<%
	}	
%>	
	<% 
	var securityTypes = (securityType&&securityType!="")?securityType.split(' '):[];
	for(var i=0;i<securityTypes.length;i++)
	{
		if(securityTypes[i]=="")
		{
			break;
		}
		var mainjs = fs.readFileSync(dirname + '/security/' + securityTypes[i] + '/main.js', 'utf-8');
		var maincss = fs.readFileSync(dirname + '/security/' + securityTypes[i] + '/main.css', 'utf-8');
	%>
		$.ajax({
            url:"http://<%=URLPrefix%>/security/<%=securityTypes[i]%>/main.css",
            success:function(data){
                 $("<style></style>").appendTo("head").html(data.replace(/@@CJS_WEB_URL@@/g,"<%=URLPrefix%>"));
            }
        });

        $('body').append("<script type='text/javascript'><%=ejs.render(mainjs, {locals: {'dirname':dirname,'myObjects': myObjects,'URLPrefix':URLPrefix, 'CJSsettings':CJSsettings}}).replace(/\n/g,"")%></script>");
     
        function createSpinner()
        {
        	var wrapper = document.createElement('div');
        	var div = document.createElement('div');
			var spanC = document.createElement('span');
			var spanDSpin = document.createElement('span');
			var spanE = document.createElement('span');
			var spanRR1 = document.createElement('span');
			var spanRR2 = document.createElement('span');
			var spanRR3 = document.createElement('span');
			var spanRR4 = document.createElement('span');
			
			wrapper.setAttribute('style','inline-block');
			wrapper.setAttribute('class','spinnerWrapper');
			div.setAttribute('class','loader rspin');
			spanC.setAttribute('class','c');
			spanDSpin.setAttribute('class','d spin');
			spanE.setAttribute('class','e');
			spanRR1.setAttribute('class','r r1');
			spanRR2.setAttribute('class','r r2');
			spanRR3.setAttribute('class','r r3');
			spanRR4.setAttribute('class','r r4');
			
			div.appendChild(spanC);
			spanDSpin.appendChild(spanE);
			div.appendChild(spanDSpin);
			div.appendChild(spanRR1);
			div.appendChild(spanRR2);
			div.appendChild(spanRR3);
			div.appendChild(spanRR4);
			wrapper.appendChild(div);
		
			return wrapper;
        }

	<%
	}%> 
<%}catch(error){console.log("\n\n\n***",error.stack," ",error.message,"****\n\n\n");}%>