var mvm;
$(document).ready(function(){
<%
try{
	
	objects = myObjects;
	testdriveURL = URLPrefix;
	%>
	function fields(data)
			{
				//alert(data.type);
				
				var self = this;
				self.name=ko.observable(data.name);					
				self.type=ko.observable(data.type);			
				self._id=ko.observable(data._id);
					
			}
	// handle children
	<%
	
	function handleChildren(myObject,counter,nextFunction)
	{
		
		if(!myObject)
			return;

		myObject.varname=myObject.name.split("_")[2];
		if(myObject.name.search("_search")>-1)
		{
			console.log("inside handleChildren where myObject.name contains _search");
                        nextFunction(objects[counter+1],counter+1,handleChildren);
			return;
		}

		//console.log("at top of handle: ",myObject.name);
		if(myObject.children && myObject.children.length>0)
		{
			//console.log("I should not be here");
			for(i=0;i<myObject.children.length;i++)
			{
				//console.log("inside children loop");
				handleChildren(myObject.children[i]);
			}
		}
		%>


			var <%=myObject.name%> = function(data)
			{
				//alert(JSON.stringify(data));
				
				var self = this;
				<%
				//console.log("inside creating function");
				if(myObject.fields)
				{
					//console.log("inside fields");
					for(j=0;j<myObject.fields.length;j++)
					{
						//console.log("inside adding fields loop");
						if(myObject.fields[j].name!="_id")
						{
					%>
						if(data.<%=myObject.fields[j].name%>)
						{
							self.<%=myObject.fields[j].name%>=ko.observable(data.<%=myObject.fields[j].name%>);
						}
						else
						{
							self.<%=myObject.fields[j].name%>=ko.observable('');
						}
					<%
						}	
						//console.log("after processing adding field");
					}
					%>
						this.remove = function() {
    					   	$.ajax("http://<%=testdriveURL%>/delete/instances/"+this.id(), {
    					   		data: '',
								type: "get", 
								dataType: "text",
								success: function(result)
								{
									$.getJSON("http://<%=testdriveURL%>/getEntriesByTenantObjectId/<%=myObject.name%>", function(allData) {
										var mapped = $.map(allData, function(item) { return new <%=myObject.name%>(item) });
										mvm.<%=myObject.varname%>.read(mapped);
									});
								}
							});
						}

						this.update = function() {
       						$.ajax("http://<%=testdriveURL%>/update/instances/<%=myObject.name%>/" + this.id() , {
							data: ko.toJSON(this),
							type: "post", dataType: "text",
							success: function(result) 
							{ 
								$.getJSON("http://<%=testdriveURL%>/getEntriesByTenantObjectId/<%=myObject.name%>", function(allData) {
									var mapped = $.map(allData, function(item) { return new <%=myObject.name%>(item) });
									mvm.<%=myObject.varname%>.read(mapped);
								});
        				   	}
       						});
    					}	
						
						self.id=ko.observable(data._id);
						self.row=ko.observable("");
						self.myForm = ko.observable("");
					<%
				}
				if(myObject.children)
				{
					//console.log("I have children");
					
					for(i=0;i<myObject.children.length;i++)
					{
						//console.log("inside children loop");
						if(myObject.children[i].fields && myObject.children[i].fields.length>0)
						{
						%>
						if(data.<%=myObject.children[i].name%>)
							self.<%=myObject.children[i].name%> = $.map(data.<%=myObject.children[i].name%>,function(item){return new <%=myObject.children[i].name%>(item)});
						<%
						}
				
					}
					
					//console.log("after loop");
				}

		%>
			}
			
		<%
			//console.log("before calling next function ");
		
			if(objects && counter<objects.length)
			{
				//console.log("inside calling next function ", objects.length, " ",counter);
				nextFunction(objects[counter+1],counter+1,handleChildren);
			}
		
		
	}
	
	var i=0;
	
	handleChildren(objects[0],0,handleChildren);

	%>


	function myViewModel()
	{
		var self = this;
	<%
	//console.log("myViewModel: ", objects.length);
	for(i=0;i<objects.length;i++)
	{
		objects[i].varname=objects[i].name.split("_")[2];
		//console.log("tee: ", objects[i], " ", objects[i].type, " ", objects[i].fields.length);
		if(objects[i].varname.search("_search")>-1)
			continue;
		if(objects[i].name)
		{
		%>
		//self.<%=objects[i].varname%>=ko.observableArray([]);
		self.<%=objects[i].varname%>_search_results=ko.observableArray([]);
		//self.<%=objects[i].varname%>(self.<%=objects[i].name%>_search_results);
		self.<%=objects[i].varname%>_search_term=ko.observable();							

		<%
		}
	}
	%>
	//setFormData
	<%
	for(i=0;i<objects.length;i++)
	{
		if(objects[i].name)
		{
	%>	
	<%=objects[i].varname%>_reset_form = function(me)
		{
			//alert(me.first_name());
	<%
		for(j=0;j<objects[i].fields.length;j++)
		{
			if(objects[i].fields[j].name!="_id")
			{
	%>
			self.<%=objects[i].varname%>.<%=objects[i].fields[j].name%>("");
	<%
			}
		}
	%>
		}

	<%
		}
	}
	%>
	//initial load
	<%
	for(i=0;i<objects.length;i++)
	{
		 if(objects[i].name.search("_search")>-1)
                        continue;	
	%>
	self.<%=objects[i].name%>_getRecords= function()
	{
		$.ajax(
			{url:"http://<%=testdriveURL%>/getEntriesByTenantObjectId/<%=objects[i].name%>",
			dataType:"json",
			data:'',
			success:function(data){
				var mapped = $.map(data, function(item) { return new <%=objects[i].name%>(item) });
        			self.<%=objects[i].varname%>.read(mapped);
			}			
		});
	}
	<%
	}
	%>

	// create code
	<%
	for(i=0;i<objects.length;i++)
	{
		 if(objects[i].name.search("_search")>-1)
                        continue;	
	%>
	if(!self.<%=objects[i].varname%>)
		self.<%=objects[i].varname%> = {};
	self.<%=objects[i].varname%>Form = ko.observable();

    var <%=objects[i].varname%>CreateJSON = function(){
	self.<%=objects[i].varname%>Form({<%
	for(j=0;j<objects[i].fields.length-1;j++)
	{
		if(objects[i].fields && objects[i].fields.length > j && objects[i].fields[j].name!="_id")
		{
		%>
		<%=objects[i].fields[j].name%>:self.<%=objects[i].varname%>.<%=objects[i].fields[j].name%>(),
		<%
		}
	}
	%><%=objects[i].fields[objects[i].fields.length-1].name%>:self.<%=objects[i].varname%>.<%=objects[i].fields[objects[i].fields.length-1].name%>()
    	});
	}
    
    self.<%=objects[i].varname%>.read=ko.observableArray([]);

    <%
    for(j=0;j<objects[i].fields.length;j++)
	{
		if(objects[i].fields[j].name!="_id")
		{
		%>self.<%=objects[i].varname%>.<%=objects[i].fields[j].name%>=ko.observable("");
		<%
		}
	}
	%>
    self.<%=objects[i].varname%>.create = function() {
    	var patt = new RegExp("<%=objects[i].varname%>Form","g");
        //alert(ko.toJSON(self)); 
        <%=objects[i].varname%>CreateJSON();
        //alert(ko.toJSON(self)); 
        $.ajax("http://<%=testdriveURL%>/createInstance/<%=objects[i].name%>", {
			data: ko.toJSON(self).replace(patt,"<%=objects[i].name%>","g"),
			type: "post",
			dataType: "text",
			success: function(result) 
			{
				$.getJSON("http://<%=testdriveURL%>/getEntriesByTenantObjectId/<%=objects[i].name%>", function(allData) {
					var mapped = $.map(allData, function(item) { return new <%=objects[i].name%>(item) });
        			self.<%=objects[i].varname%>.read(mapped);
				});

				<%=objects[i].varname%>_reset_form();
			}
        });
    }
    	 
    
	self.<%=objects[i].varname%>.search = function() {
		//alert(self.<%=objects[i].name%>_search_term());
		$.getJSON("http://<%=testdriveURL%>/<%=objects[i].name%>/search/"+self.<%=objects[i].varname%>_search_term(), function(allData) {
            var mapped = $.map(allData, function(item) { return new <%=objects[i].name%>(item) });
            self.<%=objects[i].varname%>_search_results(mapped);
			self.<%=objects[i].varname%>.read(mapped);
        });
    }
	<%
	}
	%>
	}

	mvm = new myViewModel();
	ko.applyBindings(mvm);
<%
	for(i=0;i<objects.length;i++)
	{
	%>
		mvm.<%=objects[i].name%>_getRecords();
	<%
	}	
%>	
});
<%}catch(error){console.log("\n\n\n***",error.stack," ",error.message,"****\n\n\n");}%>